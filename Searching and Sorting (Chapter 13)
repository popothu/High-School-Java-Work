Ex:18
//not faster than standard selection sort
//complexity class: O(N^2)
public static void selectionSortModified(int[] a) {
    for (int i=a.length-1; i>0; i--) {
      int largest=a[i], largestIndex=i;
      for (int j=i; j>=0; j--) {
        if (a[j]>largest) {
          largest=a[j];
          largestIndex=j;
        }
      }
      swap(a,i,largestIndex);
    }
  }




Ex:19
//will be slightly faster than standard selection sort
//complexity class is still O(N^2)
//I think itâ€™s slower than merge sort because merge sort is O(N log N), but this is O(N^2)
public static void dualSelectionSort(int[] a) {
    for (int i=0; i<a.length/2; i++) {
      int largest=a[i], smallest=a[i], largeIndex=i, smallIndex=i;
      for (int j=i; j<a.length-i; j++) {
        if (a[j]>largest) {
          largest=a[j];
          largeIndex=j;
        }
        if (a[j]<smallest) {
          smallest=a[j];
          smallIndex=j;
        }
      }
      swap(a,i,smallIndex);
      swap(a,-i+a.length-1,largeIndex);
    }
  }
